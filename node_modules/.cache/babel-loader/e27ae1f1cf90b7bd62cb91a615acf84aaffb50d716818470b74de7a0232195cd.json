{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [task, setTask] = useState([]);\n  const [newtask, setNewTask] = useState(\"\");\n  function handleInputChange(event) {}\n  function addTask() {}\n  function deleteTask(index) {}\n  function moveTaskUp(index) {}\n  function moveTaskDown(index) {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(ToDoList, \"pr2YlkEK4iBbrBOSakzwEy8Dwd0=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","ToDoList","_s","task","setTask","newtask","setNewTask","handleInputChange","event","addTask","deleteTask","index","moveTaskUp","moveTaskDown","_c","$RefreshReg$"],"sources":["/Users/samrudhuchil/Desktop/Website/react-todo-list/src/ToDoList.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nfunction ToDoList(){\n\n    const [task, setTask] = useState([]);\n    const [newtask, setNewTask] = useState(\"\");\n\n    function handleInputChange(event){\n\n    }\n\n    function addTask(){\n    \n    }\n        \n    function deleteTask(index){\n\n    }\n\n    function moveTaskUp(index){\n\n    }\n\n    function moveTaskDown(index){\n\n    }\n\n    return(<></>);\n}\nexport default ToDoList;"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASW,iBAAiBA,CAACC,KAAK,EAAC,CAEjC;EAEA,SAASC,OAAOA,CAAA,EAAE,CAElB;EAEA,SAASC,UAAUA,CAACC,KAAK,EAAC,CAE1B;EAEA,SAASC,UAAUA,CAACD,KAAK,EAAC,CAE1B;EAEA,SAASE,YAAYA,CAACF,KAAK,EAAC,CAE5B;EAEA,oBAAOX,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAChB;AAACI,EAAA,CA1BQD,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}